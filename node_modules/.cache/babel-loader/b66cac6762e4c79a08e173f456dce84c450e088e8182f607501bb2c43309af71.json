{"ast":null,"code":"var _jsxFileName = \"/Users/nehatapasvi/Desktop/dtaad1/src/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setTheme] = useState(() => {\n    // Check localStorage first, then system preference\n    const savedTheme = localStorage.getItem('dtaad-theme');\n    if (savedTheme) {\n      return savedTheme;\n    }\n\n    // Check system preference\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark';\n    }\n    return 'light';\n  });\n  const toggleTheme = () => {\n    setTheme(prevTheme => {\n      const newTheme = prevTheme === 'light' ? 'dark' : 'light';\n      localStorage.setItem('dtaad-theme', newTheme);\n      return newTheme;\n    });\n  };\n  useEffect(() => {\n    // Apply theme to document\n    const root = window.document.documentElement;\n    if (theme === 'dark') {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n  }, [theme]);\n  const value = {\n    theme,\n    toggleTheme,\n    isDark: theme === 'dark',\n    isLight: theme === 'light'\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"dfBccTEk7NLmywBFB+nxTItNFUs=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","context","Error","ThemeProvider","children","_s2","theme","setTheme","savedTheme","localStorage","getItem","window","matchMedia","matches","toggleTheme","prevTheme","newTheme","setItem","root","document","documentElement","classList","add","remove","value","isDark","isLight","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nehatapasvi/Desktop/dtaad1/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(() => {\n    // Check localStorage first, then system preference\n    const savedTheme = localStorage.getItem('dtaad-theme');\n    if (savedTheme) {\n      return savedTheme;\n    }\n    \n    // Check system preference\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark';\n    }\n    \n    return 'light';\n  });\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => {\n      const newTheme = prevTheme === 'light' ? 'dark' : 'light';\n      localStorage.setItem('dtaad-theme', newTheme);\n      return newTheme;\n    });\n  };\n\n  useEffect(() => {\n    // Apply theme to document\n    const root = window.document.documentElement;\n    \n    if (theme === 'dark') {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n  }, [theme]);\n\n  const value = {\n    theme,\n    toggleTheme,\n    isDark: theme === 'dark',\n    isLight: theme === 'light',\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IACvC;IACA,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACtD,IAAIF,UAAU,EAAE;MACd,OAAOA,UAAU;IACnB;;IAEA;IACA,IAAIG,MAAM,CAACC,UAAU,IAAID,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,EAAE;MAClF,OAAO,MAAM;IACf;IAEA,OAAO,OAAO;EAChB,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBP,QAAQ,CAACQ,SAAS,IAAI;MACpB,MAAMC,QAAQ,GAAGD,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;MACzDN,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAED,QAAQ,CAAC;MAC7C,OAAOA,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd;IACA,MAAMwB,IAAI,GAAGP,MAAM,CAACQ,QAAQ,CAACC,eAAe;IAE5C,IAAId,KAAK,KAAK,MAAM,EAAE;MACpBY,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAC5B,CAAC,MAAM;MACLJ,IAAI,CAACG,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IAC/B;EACF,CAAC,EAAE,CAACjB,KAAK,CAAC,CAAC;EAEX,MAAMkB,KAAK,GAAG;IACZlB,KAAK;IACLQ,WAAW;IACXW,MAAM,EAAEnB,KAAK,KAAK,MAAM;IACxBoB,OAAO,EAAEpB,KAAK,KAAK;EACrB,CAAC;EAED,oBACET,OAAA,CAACC,YAAY,CAAC6B,QAAQ;IAACH,KAAK,EAAEA,KAAM;IAAApB,QAAA,EACjCA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC1B,GAAA,CA/CWF,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}